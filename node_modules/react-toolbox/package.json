{
  "name": "react-toolbox",
  "version": "0.14.1",
  "homepage": "http://www.react-toolbox.com",
  "description": "A set of React components implementing Google's Material Design specification with the power of CSS Modules.",
  "author": {
    "name": "React Toolbox Team",
    "url": "http://github.com/react-toolbox"
  },
  "contributors": [
    {
      "name": "Javi Jimenez Villar",
      "email": "javi.jimenez.villar@gmail.com",
      "url": "http://soyjavi.com/"
    },
    {
      "name": "Javi Velasco Arjona",
      "email": "javier.velasco86@gmail.com",
      "url": "http://javivelasco.com/"
    }
  ],
  "main": "./lib",
  "scripts": {
    "start": "cross-env NODE_ENV=development UV_THREADPOOL_SIZE=100 node ./server",
    "lint": "eslint ./ --ext .js,.jsx",
    "babel": "babel ./components --out-dir ./lib",
    "sass": "cpx './components/**/*.scss' ./lib",
    "build": "cross-env NODE_ENV=production npm run babel && npm run sass",
    "clean": "rimraf ./lib",
    "prebuild": "npm run clean",
    "prepublish": "npm run build",
    "test": "cross-env NODE_ENV=test karma start",
    "test:watch": "cross-env NODE_ENV=test karma start --no-single-run",
    "release": "bumped release",
    "patch": "bumped release patch"
  },
  "bugs": {
    "url": "https://github.com/react-toolbox/react-toolbox/issues",
    "email": "issues@react-toolbox.com"
  },
  "keywords": [
    "react",
    "react-component",
    "material design",
    "toolkit",
    "components"
  ],
  "license": "MIT",
  "peerDependencies": {
    "classnames": "^2.2.0",
    "react": "^0.14",
    "react-dom": "^0.14.0",
    "react-addons-css-transition-group": "^0.14.0",
    "normalize.css": "^3.0.3"
  },
  "typings": "./react-toolbox.d.ts",
  "devDependencies": {
    "autoprefixer": "^6.2.1",
    "babel-cli": "^6.3.17",
    "babel-core": "^6.3.26",
    "babel-eslint": "^5.0.0-beta4",
    "babel-loader": "^6.2.0",
    "babel-plugin-react-transform": "^2.0.0-beta1",
    "babel-polyfill": "^6.3.14",
    "babel-preset-es2015": "^6.3.13",
    "babel-preset-react": "^6.3.13",
    "babel-preset-stage-0": "^6.3.13",
    "bluebird": "^3.1.1",
    "core-js": "^1.2.6",
    "cpx": "^1.2.1",
    "cross-env": "^1.0.5",
    "css-loader": "^0.23.1",
    "eslint": "^1.10.3",
    "eslint-plugin-babel": "^3.0.0",
    "eslint-plugin-react": "^3.12.0",
    "expect": "^1.13.4",
    "express": "^4.13.3",
    "extract-text-webpack-plugin": "^0.9.1",
    "glob": "^6.0.2",
    "karma": "^0.13.15",
    "karma-chrome-launcher": "^0.2.2",
    "karma-cli": "^0.1.2",
    "karma-mocha": "^0.2.1",
    "karma-phantomjs-launcher": "~0.2.1",
    "karma-webpack": "^1.7.0",
    "mocha": "^2.3.4",
    "node-sass": "^3.4.2",
    "normalize.css": "^3.0.3",
    "phantomjs": "^1.9.19",
    "phantomjs-polyfill": "0.0.1",
    "postcss-loader": "^0.8.0",
    "react": "^0.14.3",
    "react-addons-css-transition-group": "^0.14.3",
    "react-addons-test-utils": "^0.14.3",
    "react-docgen": "^2.4.0",
    "react-dom": "^0.14.3",
    "react-transform-catch-errors": "^1.0.0",
    "react-transform-hmr": "^1.0.1",
    "redbox-react": "^1.2.0",
    "rimraf": "^2.5.0",
    "sass-loader": "^3.1.2",
    "sinon": "git://github.com/sinonjs/sinon.git#b672042043517b9f84e14ed0fb8265126168778a",
    "style-loader": "^0.13.0",
    "toolbox-loader": "0.0.2",
    "webpack": "^1.12.9",
    "webpack-dev-middleware": "^1.4.0",
    "webpack-hot-middleware": "^2.6.0"
  },
  "repository": {
    "type": "git",
    "url": "github:react-toolbox/react-toolbox"
  },
  "dependencies": {
    "classnames": "^2.2.1"
  },
  "readme": "# React Toolbox\n\n[![npm version](https://img.shields.io/npm/v/react-toolbox.svg?style=flat-square)](https://www.npmjs.com/package/react-toolbox)\n[![Build Status](http://img.shields.io/travis/react-toolbox/react-toolbox/master.svg?style=flat-square)](https://travis-ci.org/react-toolbox/react-toolbox)\n[![NPM Status](http://img.shields.io/npm/dm/react-toolbox.svg?style=flat-square)](https://www.npmjs.org/package/react-toolbox)\n[![react-toolbox channel on discord](https://img.shields.io/badge/discord-%23react--toolbox%20%40%20reactiflux-61dafb.svg?style=flat-square)](https://discord.gg/0ZcbPKXt5bW9FLzM)\n[![Donate](https://img.shields.io/badge/donate-paypal-blue.svg?style=flat-square)](https://paypal.me/javivelasco)\n\nReact Toolbox is a set of [React](http://facebook.github.io/react/) components that implement [Google's Material Design specification](https://www.google.com/design/spec/material-design/introduction.html). It's powered by [CSS Modules](https://github.com/css-modules/css-modules) and harmoniously integrates with your [Webpack](http://webpack.github.io/) workflow. You can take a tour through our documentation website and try the components live!\n\n## Installation\n\nReact Toolbox can be installed as an [npm package](https://www.npmjs.org/package/react-toolbox);\n\n```\nnpm install --save react-toolbox\n```\n\n## Usage\n\nAlthough there are other ways to use React Toolbox, the recommended way is to create a Webpack workflow with [Babel Loader](https://github.com/babel/babel-loader), [CSS Loader](https://github.com/webpack/css-loader) and [SASS Loader](https://github.com/jtangelder/sass-loader). A good starting point is [React Hot Webpack Boilerplate](https://github.com/gaearon/react-hot-boilerplate).\n\nOnce you have the workflow ready, you can just require and use the components:\n\n```jsx\nimport React from 'react';\nimport Button from 'react-toolbox/lib/button';\n\nconst CustomButton = () => (\n  <Button label=\"Hello world\" raised accent />\n);\n\nexport default CustomButton;\n```\n\nThe previous code creates a React button component based on React toolbox button. It's important to notice that requiring a module from the exposed root of the package will import the **SASS** of the component.\n\n## Roboto Font and Material Design Icons\n\nReact Toolbox assumes that you are importing [Roboto Font](https://www.google.com/fonts/specimen/Roboto) and [Material Design Icons](https://www.google.com/design/icons/).\n\nIn order to import the fonts for you, we'd need to include them in the CSS which is considered a bad practice. If you are not including them in your app yo to the linked sites and follow the instructions. \n\n## App component\n\nThere are some components in React Toolbox that requires special positioning. For example, `Dialog` and `Drawer` components block the scroll showing a fixed positioned overlay. To handle these cases, React Toolbox needs some styling in your root node. This can be achieved wrapping your app with a non intrusive `App` wrapper component:\n\n```jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ToolboxApp from 'react-toolbox/lib/app';\nimport App from './my-app';\n\nReactDOM.render(\n  <ToolboxApp>\n    <App />\n  </ToolboxApp>\n, document.getElementById('app'));\n\n```\n\n## Customization\n\nSince React Toolbox styles are written in CSS it's pretty easy to customize your components. We have several ways:\n\n### Via React Toolbox Loader\n\nThanks to the power of SASS, all components in React Toolbox are configured from a variables file. The best way to customize your build is to create a custom configuration SASS file overriding configuration variables like colors or sizes.\n\nWith [toolbox-loader](https://github.com/react-toolbox/toolbox-loader) you can tell webpack where your configuration file is and it will prepend your config to each SASS build. This will result in your customized CSS for React Toolbox Components. For now you can browse the configuration files and override what you want. \n\n### Via `className` property\n\nGenerally each component will have a `className` prop so you can tell the class name you want to keep in the root node of the resulting markup. All markup is style with the lowest specificity level so you can just nest one level in your CSS and the result will be applied. Consider this example:\n\n```jsx\nconst CustomButton = () => (\n  <Button className='customized' label='Custom button' />\n);\n```\n\nIf you browse the resulting markup you will see *data attributes* like `data-role=\"label\"` so you can avoid styling directly tag names. You can now write your CSS:\n\n```css\n.customized > [data-role=\"label\"] {\n  color: green;\n  font-weight: bold;\n}\n```\n\n## TypeScript\n\nA TypeScript definition file `react-toolbox.d.ts` is available. It is referenced in `package.json` and should be picked up by the TypeScript compiler when importing from the npm package.\n\n## Authors and Contributors\n\nThe project is being initially developed and maintained by [Javier Velasco](http://javivelasco.com) and [Javier Jim√©nez](http://soyjavi.com) and the [contribution scene](https://github.com/react-toolbox/react-toolbox/graphs/contributors) is just getting warm. We want to create reference components so any contribution is very welcome.\n\nTo work in the project you'd need a `node` version supporting ES6 syntax. Although the project is built using Babel we use some ES6 features in the development server. Also, the packages has been tested with `node 4.2.1`. Consider using [nvm](https://github.com/creationix/nvm) or [n](https://github.com/tj/n) to handle different node versions!\n\nTo start documentation site locally you'd need to install dependencies from the main package and also dependencies from the docs subproject:\n\n```\ngit clone https://github.com/react-toolbox/react-toolbox.git\nnpm install\ncd docs/\nnpm install \nnpm start\n```\n\nLocal documentation will be available at http://localhost:8081/\n\n## License \nThis project is licensed under the terms of the [MIT license](https://github.com/react-toolbox/react-toolbox/blob/master/LICENSE).\n",
  "readmeFilename": "README.md",
  "_id": "react-toolbox@0.14.1",
  "dist": {
    "shasum": "46bbb63638096204e7de33f9cbed6d88617dd8c9"
  },
  "_from": "react-toolbox@",
  "_resolved": "https://registry.npmjs.org/react-toolbox/-/react-toolbox-0.14.1.tgz"
}
